{"version":3,"sources":["components/Header.js","components/Filters.js","components/PunchCard.js","components/SetupCard.js","components/Total.js","containers/InGame.js","containers/StartingPage.js","containers/App.js","serviceWorker.js","index.js"],"names":["Header","className","style","color","Filters","changingFilters","onClick","id","PunchCard","punchLine","counter","SetupCard","cue","showingDelivery","length","Total","wrongTotal","correctTotal","stop","toString","InGame","props","getJoke","blackList","state","blacklistFlags","Object","keys","filter","key","queryString","url","fetch","then","response","json","joke","setState","jokeSetUp","setup","jokeDelivery","delivery","changeFilters","event","assign","target","matches","classList","toggle","countAnswers","correct","wrong","shouldShowSetup","showAnswer","nsfw","religious","political","racist","sexist","this","Component","StartingPage","startGame","gameStarted","stopGame","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cf358d6a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n   \r\n    return (\r\n        <div className = \"shadow-2 pt4 center bg-navy\" >\r\n            <h1 className=\"tc moon-gray avenir f2 ma5\" style={{color: '#125872'}}>Guess The Joke</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Filters = ({ changingFilters }) => {\r\n    return (\r\n        <ul onClick = {changingFilters} className=\" tc pa3 ma2\">\r\n            <li id=\"nsfw\" className=\"dib pa2 ma2 br4 bg-dark-red ba\" >nsfw</li>\r\n            <li id=\"religious\" className=\"dib pa2 ma2 br4 bg-dark-red ba\" >religious</li>\r\n            <li id=\"political\" className=\"dib pa2 ma2 br4 bg-dark-red ba\" >political</li>\r\n            <li id=\"racist\" className=\"dib pa2 ma2 br4 bg-dark-red ba\" >racist</li>\r\n            <li id=\"sexist\" className=\"dib pa2 ma2 br4 bg-dark-red ba\" >sexist</li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Filters;","import React from 'react';\r\n\r\nconst PunchCard = ({ punchLine, counter }) => {\r\n    return (\r\n        <div className=\"ba bg-navy tc ma3 pa3\">\r\n            <h2>{punchLine}</h2>\r\n            <ul className=\"ma3 pa1\" onClick = {counter}>\r\n                <li id=\"wrong\" className=\"dib pa3 ma2 bg-dark-red ba\" >Ha, never heard it</li>\r\n                <li id=\"correct\" className=\"dib pa3 ma2 bg-green ba\" >Gotcha, it's old</li>\r\n            </ul>\r\n        </div>\r\n        // <div className=\"tc ma5 pt\">\r\n        //     <h2>{punchLine}</h2>\r\n        //     <ul className=\"ma5 pt\" onClick = {counter}>\r\n        //         <li id=\"wrong\" className=\"di pa3 ma2 bg-dark-red\" >Ha, never heard this joke</li>\r\n        //         <li id=\"correct\" className=\"di pa3 ma2 bg-green\" >Gotcha, it's old</li>\r\n        //     </ul>\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default PunchCard;","import React from 'react';\r\n\r\nconst SetupCard = ({ cue, showingDelivery}) => {\r\n    return (\r\n        cue.length === 0 ? \r\n        <div className=\"ba bg-navy tc ma3 pa1\">\r\n            <h2 className=\"tc ma5 pt\">Loading</h2>\r\n        </div>:\r\n        <div className=\"ba bg-navy tc ma3 pa1\">\r\n            <h2>{cue}</h2>\r\n            <div className=\"pa3\">\r\n                <p className= \"dib pa3 ba ma4\" onClick={showingDelivery}>See the punchline</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetupCard;","import React from 'react';\r\n\r\nconst Total = ({wrongTotal, correctTotal, stop}) => {\r\n    return (\r\n        <ul className=\"tc ma3 pa1 center\">\r\n                <li className=\"dib pa3 ma2 bg-orange\" >Total: nailed {correctTotal.toString()} out of {(correctTotal + wrongTotal).toString()} jokes</li>\r\n                <li className=\"dib pa3 ma2 bg-dark-red ba\" onClick={stop} >STOP</li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Total;","import React, { Component } from 'react';\r\nimport Filters from '../components/Filters';\r\nimport PunchCard from '../components/PunchCard';\r\nimport SetupCard from '../components/SetupCard';\r\nimport Total from '../components/Total';\r\n\r\nclass InGame extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            shouldShowSetup: true,\r\n            jokeSetUp: '',\r\n            jokeDelivery: '',\r\n            blackList: {\r\n                nsfw: true,\r\n                religious: true,\r\n                political: true,\r\n                racist: true,\r\n                sexist: true,\r\n            },\r\n            wrong: 0,\r\n            correct: 0,\r\n        }\r\n    }\r\n\r\n    getJoke = () => {\r\n        const { blackList } = this.state;\r\n        const blacklistFlags = Object.keys(blackList).filter(key => blackList[key]).toString();\r\n        const queryString = blacklistFlags.length === 0 ? '' : `blacklistFlags=${blacklistFlags}&`\r\n        const url = `https://sv443.net/jokeapi/v2/joke/Any?${queryString}type=twopart`;\r\n        \r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(joke => this.setState({\r\n                jokeSetUp: joke.setup,\r\n                jokeDelivery: joke.delivery\r\n             }))\r\n    }\r\n\r\n    componentDidMount() { \r\n        this.getJoke();\r\n    }\r\n\r\n    changeFilters = (event) => {\r\n        const blackList = Object.assign({}, this.state.blackList);\r\n        const target = event.target;\r\n\r\n        for (let filter of Object.keys(blackList)) {\r\n            if (target.matches(`#${filter}`)) {\r\n                blackList[filter] = !blackList[filter];\r\n                target.classList.toggle('bg-green')\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setState({blackList: blackList});\r\n    }\r\n\r\n    countAnswers = (event) => {\r\n        if (event.target.matches('#correct')) {\r\n            this.setState({correct: this.state.correct + 1})\r\n        } else if (event.target.matches('#wrong')) {\r\n            this.setState({wrong: this.state.wrong + 1})\r\n        }\r\n        this.setState({shouldShowSetup: true})\r\n        this.getJoke();\r\n    }\r\n\r\n    showAnswer = () => {\r\n        this.setState({\r\n            shouldShowSetup: false,\r\n            jokeSetUp: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { shouldShowSetup, jokeSetUp, jokeDelivery, wrong, correct } = this.state;\r\n        const { stop } = this.props\r\n        return (\r\n        <div className=\"fw6 lightest-blue\">\r\n            <Filters changingFilters={this.changeFilters}/>\r\n            {\r\n                shouldShowSetup ? \r\n                <SetupCard cue = {jokeSetUp} showingDelivery = {this.showAnswer}/> :\r\n                <PunchCard punchLine = {jokeDelivery} counter = {this.countAnswers}/>\r\n            }\r\n            <Total stop = {stop} wrongTotal = {wrong} correctTotal = {correct} />\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InGame;","import React, { Component } from \"react\";\r\nimport InGame from './InGame';\r\n\r\nclass StartingPage extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            gameStarted: false\r\n        }\r\n    }\r\n    startGame = () => {\r\n        this.setState({gameStarted: true})\r\n    }\r\n    \r\n    stopGame = () => {\r\n        this.setState({gameStarted: false})\r\n    }\r\n\r\n    render() {  \r\n    return (\r\n        this.state.gameStarted ?\r\n            <InGame stop = {this.stopGame}/> :\r\n            <div id = \"start\" className= \"tc lightest-blue pa3 ma5\" onClick = {this.startGame}>\r\n                <h2 className=\"di pa3 bg-orange ba\">Start Now</h2>\r\n            </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default StartingPage;","import React, { Component } from 'react';\nimport './App.css';\nimport Header from '../components/Header';\nimport StartingPage from './StartingPage';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <StartingPage />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}